{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x419a92F1F109F51b810D943EeecCa71197093f5d",
    "txHash": "0xc4f0c027b23874f2e69a7169bb2bbadfd9124400dd54a5c3d688d4d62325a321"
  },
  "proxies": [
    {
      "address": "0x3A6766A8089cf4C1757B39B3ee619f21479EEd20",
      "txHash": "0x83e7ef4a4005fa9b61d78fd1d317b9cd0f5009d190fbd2947af53b0cb1feecd7",
      "kind": "transparent"
    },
    {
      "address": "0xf5E60DF3b748523A61C90434A3Ce3ED31BB0070d",
      "txHash": "0x01e8c667176b221af3578640b08b66f703942e457a72485ef0f953bdf7a109bb",
      "kind": "transparent"
    },
    {
      "address": "0x75f35B48a711A6E11BaE9AbF25D10aA745ec2307",
      "txHash": "0x4d30e6741021a38135abd4acdcea0d5cea1ff138ead376a171602ffd32dbc256",
      "kind": "transparent"
    },
    {
      "address": "0x017951f3aB08Ea366583dAA5FaCffC9bA08DEFb1",
      "txHash": "0x8df4e573274f0bfa44ddbb817e9692cf3a1ab0a1677868d056a9513bc722ba33",
      "kind": "transparent"
    },
    {
      "address": "0x356fB6B11370162d70293c074342C02a055A61F4",
      "txHash": "0xf6808a0bd73f10e3eff25c7df1c4ee1c291435e8d2bdd6f83aace1546be48166",
      "kind": "transparent"
    },
    {
      "address": "0xcE84fc80A1a49DE9FF0e33CC6CDaB343634e0eC1",
      "txHash": "0xa81f7339aa2e41dda3dacade3e1eaf48bc6edf40eb9cf625f6f8ba3d1fda5920",
      "kind": "transparent"
    },
    {
      "address": "0x3253e8f3c745ae6d944Cab8eE19f22eFAd179a7E",
      "txHash": "0x1c124224b4952b27e57cfebf69beea7a70629a8415e141465050d64fd955f15a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1401033f92620dfbac78a17f7ae8df0f8c527619d17450772ac686b08880e3fb": {
      "address": "0x4EDa200a0DE6D04c867468f1c3d548f9F9c56529",
      "txHash": "0x71d3380f4e7eeb27ef0ebc17e08858fe2c1d759386f3c47ee5330814560a5a33",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:12"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IM4mNFTRegistry)7284",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:13"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IM4mDAO)7175",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IM4mDAO)7175": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFTRegistry)7284": {
            "label": "contract IM4mNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "608e001189e1200ba21ab8a4d510326d782554218342757ef0530a36225c7575": {
      "address": "0x6f73dF9b13279E04274bD2a04d2c6f7E0F1d6922",
      "txHash": "0x64990f15df03f89bcd5a3e4abb245f5252dc8a7a70446707e1b1e580b6e37a05",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "convertibleList",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_contract(IERC721)4960,t_bool)",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:14"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IM4mNFT)7234",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:16"
          },
          {
            "label": "convertRecord",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool))))",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721)4960": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7234": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(contract IERC721 => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC721)4960,t_bool)": {
            "label": "mapping(contract IERC721 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool))))": {
            "label": "mapping(uint256 => mapping(address => mapping(contract IERC721 => mapping(uint256 => bool))))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "41880cf05d4aed180b8594dd6b27470ff9e801a946f5f1f0872d5db1f22f0b61": {
      "address": "0x259121c0b515ab4BA9013aF6b83DD9904D4a9c12",
      "txHash": "0xf3810e978fe720df53c9b98972cbb416c142a90f2bad6b88b16aea668a43a887",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:19"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IM4mComponents)7115",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:21"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IM4mComponents)7115": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fb0d7f12515a10ec5251d207b0596b08b3a9a8c4c772caa1abf9e8bf5e364ff5": {
      "address": "0x4Bb90EBB4C8AFf62cb585E1804464B5adcca0b2c",
      "txHash": "0xb18c146e4edd34bdc5e31ea87ca94bcf4f8af1aa200386d33b4fc584ebc18112",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:11"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:12"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IM4mNFTRegistry)7284",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IM4mNFTRegistry)7284": {
            "label": "contract IM4mNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
