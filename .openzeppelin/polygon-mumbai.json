{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC2d2E43a3BE936bf5D5BaBcc6241207fDCd7313a",
    "txHash": "0xecbf1387dfcc027f28eeafd9aea54379eb56058f0b55563d5571796f2b0d844a"
  },
  "proxies": [
    {
      "address": "0xa8cb1455ce7387058D1679BB36fF87aFD351c852",
      "txHash": "0x4c8bf48417a28c110592c5c1d2a6a9472751940162395cdbd48f50934d746bce",
      "kind": "transparent"
    },
    {
      "address": "0x632AF7BCC922CbE60674f54281cea4F0A19Be987",
      "txHash": "0xb55a5fcedbd0c0aca2af679545fd892961a04aa5ac1fc08bd9cd78fdd501543b",
      "kind": "transparent"
    },
    {
      "address": "0xDC704020127BD7A08054ecdcB51c164048B49c6A",
      "txHash": "0x13675a1ad161bd6ae35df001f91699e0b8f1bc63f596bf6b7a4ce54a865c5417",
      "kind": "transparent"
    },
    {
      "address": "0x8A1E36844A597c794fd947e3d8eb51961a91FDCb",
      "txHash": "0x1fbc76bead6043771f83a9010d1aedc12029b3616580905be5cc003499456b39",
      "kind": "transparent"
    },
    {
      "address": "0x4B91D4E20AaF5bCD594f2feD4BD4C2dAB0983a06",
      "txHash": "0x71766f2e8fc553de253b53a08dbd16819dd55f60049252219885fc89c3497c9e",
      "kind": "transparent"
    },
    {
      "address": "0x2Ba99758e695c8e8d282Bc8970c43469ae25719c",
      "txHash": "0x895aa573dbea2570dc568a28dbdbf7767b7818052f2aad7a3b05c6d12a54a0ac",
      "kind": "transparent"
    },
    {
      "address": "0xF04FC8251f20C159eF52EDb944B642E95e79D472",
      "txHash": "0xb2e21e33f526020cde3ed948870698b6bb634172bb33e4f7dedf8c7de33d25df",
      "kind": "transparent"
    },
    {
      "address": "0x21b5d4F223716e1aA26DceAEfdC284f05a4f27Da",
      "txHash": "0xc1a992f6e384baaa98a3fe3b4e6c4b335c6f46130e8679c7462f5e4b1ef5e0a1",
      "kind": "transparent"
    },
    {
      "address": "0x218f1D4046D46cbbF5A73F923DA6bC17A16F0167",
      "txHash": "0x66dfffaeee512a93ed83f7b94e20cb28a0757bc96a8a0464b614209e38f6da91",
      "kind": "transparent"
    },
    {
      "address": "0x0Bff27B743129212432b33F99ffFE182e2A8267E",
      "txHash": "0xcbb29936b574993dc1118395b52a567588fbde8da1a2cddbbb2ab5a777f8b0c3",
      "kind": "transparent"
    },
    {
      "address": "0xd2D93f956F7550C135FD43f15fe12BEA1C95599d",
      "txHash": "0x431e1ccd13e910fcaa15c89111c6f31bf1891c38bc63dbad1f147a8c550f6379",
      "kind": "transparent"
    },
    {
      "address": "0xe479eddc23DD3f916B99464045491C86708729ea",
      "txHash": "0x11d15de52dc3cb75c78657c407ae1f7921e6d9083c4997eba6589268eb08ab5a",
      "kind": "transparent"
    },
    {
      "address": "0xcCE9850A74a641Fbf894810d5A98906b8C7Ed43e",
      "txHash": "0x593842a78b786fed5a1ce97148b2655b92bc74f4937b91238592436e156cf81d",
      "kind": "transparent"
    },
    {
      "address": "0x3C9253b358E71216Ba8cb977F2A77b7ECECB3b04",
      "txHash": "0x551267475232c5b7ff7c0336230763bb1755f8c61c4f6a102846b0e35a97f0d7",
      "kind": "transparent"
    },
    {
      "address": "0xfb8412725aDE969aBef7ecfd14B9d308fd98Cc0d",
      "txHash": "0x9b3f5b1d65130a193394cb3c16a191a30922446ce59703c6d5332f797b2697b5",
      "kind": "transparent"
    },
    {
      "address": "0x9D837C050D3d43835703F00Fd71a2484eC0B99d1",
      "txHash": "0x3b5d791864d9b6f9cd3e8cb3d447e50b12849175ac1d9c05fa69603fb72fd0c6",
      "kind": "transparent"
    },
    {
      "address": "0x4ef3cEc6F571052beDc19D0812656728583524ac",
      "txHash": "0xa74f6fc721ee3e4ec759e00c21a4c65ddd936990575371d2f5595bec3e8dab94",
      "kind": "transparent"
    },
    {
      "address": "0x4773722fe9638B29e43752b97ACfd93E279e7abd",
      "txHash": "0x5c0a18ce78ecd67409601161873e74d67389fd353b6bcf34b6b6372af3fa56c5",
      "kind": "transparent"
    },
    {
      "address": "0xDc1E1Ab59c4EF8EaB28143F8eF4931D180A56fd5",
      "txHash": "0x623f9adf865ef26cf519b2e2f3b73ac6afa88b037de5b3ecf452dbccf6c0fe12",
      "kind": "transparent"
    },
    {
      "address": "0x4C2f0f2238ee1FA928A98Faf23dA5d5E5aF03654",
      "txHash": "0x2da0212f4991eaf1eae4d2577a0636befdcdc11e94028acf81abfaa358678a56",
      "kind": "transparent"
    },
    {
      "address": "0x509C47e440a81d523E3451B58a2803b120044B16",
      "txHash": "0xe84dbe4e7ed225cc682c13ea7587df1fa16130f661524b80e2675f5b8d9ed3c8",
      "kind": "transparent"
    },
    {
      "address": "0xA228805aD73d2dAd2042c93Cf9d8Df3bD0a4abED",
      "txHash": "0xd7b510d96bd4e170a442740ef00f00eb7b24a633e946e3dd52b62f0375b74a1c",
      "kind": "transparent"
    },
    {
      "address": "0x7C022E7a3Ae07C04fE28dF6bA6E209f7F75C9834",
      "txHash": "0x890612aef051d081111ae1a3a1282d4aaf513faa4dc91935e7bc3fc848093b42",
      "kind": "transparent"
    },
    {
      "address": "0xD34f16A2eB4AF6bB409628BE8B8b9486DB012802",
      "txHash": "0x42574acd6faa3cd0864e0d8e0300acbece4c86db9bdb69115d012a865a3b44a3",
      "kind": "transparent"
    },
    {
      "address": "0x589c9864C56B917b508746354d58E003D5A95f58",
      "txHash": "0x60515b1b0903f7ce4669cd9d80b6e3a714168968abf5e61d786d27571237307b",
      "kind": "transparent"
    },
    {
      "address": "0x450d6E307938a1eFFD91Df17F96348eA496bbFbD",
      "txHash": "0x53d38694981cfbbb4f1ac4c91fe3a7f645c2cb6437702e7db13558c089994254",
      "kind": "transparent"
    },
    {
      "address": "0x9Fe93aFf4c4829Ee4AeE9ebb6218df701352B9D4",
      "txHash": "0x579eb810a15586b1eca896c79a771d3dc1d15a16561eeeca1a06c8626579616f",
      "kind": "transparent"
    },
    {
      "address": "0x71d451e4dc2fc5e267139199Cc43b9a2C8982850",
      "txHash": "0xa68362f82369426be113f1cb5d6ed3092130bc23665ca93152fccfc32ffb75a7",
      "kind": "transparent"
    },
    {
      "address": "0x838Aba0E81Ae25310209BA56197486c2372a38c2",
      "txHash": "0x4c57106b5cd889263f6bcf64c8dd9a14f93bf783a68ba6e9555715f35d4bc6e7",
      "kind": "transparent"
    },
    {
      "address": "0xE37Fd614903700691973228C80714AECe5f4AB96",
      "txHash": "0xa2ba2786de3bed2d0dd041ed6de006bbcc3150b5787a08da478b8d9858db57d3",
      "kind": "transparent"
    },
    {
      "address": "0x0D39522123557282296AfAdCDd6B2a262a928fd3",
      "txHash": "0xd3b3b841ab35bd32ca402b52a2c8e7a10076b25e63e909349f6cce40bb232139",
      "kind": "transparent"
    },
    {
      "address": "0x499e2dE338eB589c9b150cc214Db742130722CcC",
      "txHash": "0x444a5dc1a54b6665027fbf21cdb776c7406c65d74dbba4a158035bf61aefb790",
      "kind": "transparent"
    },
    {
      "address": "0x7B748f1A4Dd94C572819C31F148254DECDD0652F",
      "txHash": "0xcbb5644d70244c62cdcccb27d719aae9c5df6029d5ffdac36cd80872892fc4dd",
      "kind": "transparent"
    },
    {
      "address": "0xb79B77Ef8Dc9EdE9d4842F329cC7c88bDc57bD81",
      "txHash": "0xd04c280e1328ecc478dcf2a5d939e6b050594b806137210eb10abb11c718e339",
      "kind": "transparent"
    },
    {
      "address": "0x48f555D5055908226e5494E487558fc02f489b76",
      "txHash": "0xa292e8fd15bc3d18fcddf61d77501de50c954d864caa5ecdb00f30c2513fed79",
      "kind": "transparent"
    },
    {
      "address": "0x5449889929256279e81E0a2F6EbE4127f83759EF",
      "txHash": "0xdc714e73b05e45529a71537e35404b52855cfca37024172aa45fcfd7dd38577f",
      "kind": "transparent"
    },
    {
      "address": "0x620B80Afa83B566333A6823f9629379b85a7D41E",
      "txHash": "0xa7afa184af3869413faa9a6d306db72ee0e6454734fa3c22e3eb8703e0f6dcff",
      "kind": "transparent"
    },
    {
      "address": "0x5173270D3f82Ef4217e4E173607d13159F10D03A",
      "txHash": "0xa7de2f8b3a865b3b79c18be21410f14c6d2dd8a4d1d6bbd25ed3b164f97463c3",
      "kind": "transparent"
    },
    {
      "address": "0x5E4ECDe09d37bc517DE558939dEfD1d4F2cfD132",
      "txHash": "0x21404baae36c15221eb07b4f454d862c36116c32088a7d517884a753ddc79f58",
      "kind": "transparent"
    },
    {
      "address": "0x77808252A3e1138297eb3Eb9CAfB96b1700477ba",
      "txHash": "0xdaa7d1d89df66e6a8c7c41023bc14489aca8d4c018ebd92d109a1cfa943a5cd6",
      "kind": "transparent"
    },
    {
      "address": "0xf38C8d19f00F1CE8f6DEF0Ce09dc9b38c5E9a5A3",
      "txHash": "0x9c5b609342d2fb20e95280f78fd809f68950056f938848833b58b1c1dbfa3d74",
      "kind": "transparent"
    },
    {
      "address": "0x3b23D06Ef71CbE003e34d8E967D3CaaD5fd7393d",
      "txHash": "0xadeb555e82db2ccb9e7f4f59bfb8b1dbe7f98562592a32b70275306abdc47a42",
      "kind": "transparent"
    },
    {
      "address": "0x176a35beF71f8bD3E23853bF71f76e4580D13e96",
      "txHash": "0x56b464ea34a846dbb6497cfbe8366b5f2935b12f6d83479e2fe15bec2590b9d2",
      "kind": "transparent"
    },
    {
      "address": "0x3409b1a3C5e71c18e6980Bc8333A62dc1c5309Ca",
      "txHash": "0xa1efc357d73db3b5eccf2924176fcb83c8d7efb609b672d0451c40c96481e69d",
      "kind": "transparent"
    },
    {
      "address": "0x6E3D6E02538E1E660c859B9e793a43F7Cb031329",
      "txHash": "0x33e850b6369e7a4505dfc4414aa6dec78f09e17c4b45ed09eb10abc98fd55530",
      "kind": "transparent"
    },
    {
      "address": "0xb8c01243DA1bdbA77f02e2f805bFacc461020D47",
      "txHash": "0xe52f7adfc825655862aaa61be2ca8d56b8bb9f2640f120cc1ba370ab70520379",
      "kind": "transparent"
    },
    {
      "address": "0xBa29d16B4488eC344eBD7E627df8C60B6b35F746",
      "txHash": "0x2f1fdd27ca9a4a0a113830d871c6e8e77985d9dd0a46286d86bf51c496fa8e1b",
      "kind": "transparent"
    },
    {
      "address": "0x38cD1DB1b3eaFEe726f790470BD675D2d7850a86",
      "txHash": "0x6061bcbcb640d2d30c677e54fefc96226c7712c6a411f7f2d3aec8875f540e43",
      "kind": "transparent"
    },
    {
      "address": "0x8677eDaD1a9eF20E9A7420420e09d66E30c3E72a",
      "txHash": "0x1dbc2899d040e0273d51186006a9789a2745d0e33f142c451a785402e1064c40",
      "kind": "transparent"
    },
    {
      "address": "0xC9d7d33f679000D7621eA381569259eB599aB1c4",
      "txHash": "0x1825284d0abe860d4715021b07a9e12c9f390b1019f0393b9d01f4f9b6851277",
      "kind": "transparent"
    },
    {
      "address": "0xFA860d48571fa0d19324cBDe77e0fBDFdFFB0a47",
      "txHash": "0x73155846c3111120de39cca1442b479fce870809c6dbdc813c26657a1a602898",
      "kind": "transparent"
    },
    {
      "address": "0x5A4ce022471a29E7141611D1a6eFdf0D11e92D28",
      "txHash": "0x5621e050c436e91115ebad0a84a73c33049363ad2f69db1f69eebcbab2dbebed",
      "kind": "transparent"
    },
    {
      "address": "0xb6Bb4812a8e075CBAD0128e318203553C4cA463d",
      "txHash": "0xfa127bf104793adaf7e8542d880d5bafea95bbd385def06248e26a96273e2640",
      "kind": "transparent"
    },
    {
      "address": "0xA158abfCD9949F01eB5c2dEb81A667cBc0CdE1db",
      "txHash": "0xa19aaa635a78707620d3b4fddfb2693b2e253ea4ab686cabe81f0545b0381d68",
      "kind": "transparent"
    },
    {
      "address": "0xdd5b1C4685A34Ff07A21Ca2507D4b80e60EbC85f",
      "txHash": "0xe3de8b2c6bd116a4d2622d57c23f733de37c3083e1833eb0f1a9dc66d655dd4c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1401033f92620dfbac78a17f7ae8df0f8c527619d17450772ac686b08880e3fb": {
      "address": "0xea1A8559DE384BDdBB523b43A3E207E11d018eFA",
      "txHash": "0x6961d32e7dea2fcbfa84f7a6943d02fa6957957ac992d7c361ec103d1a9f50a9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:12"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IM4mNFTRegistry)7284",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:13"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IM4mDAO)7175",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IM4mDAO)7175": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFTRegistry)7284": {
            "label": "contract IM4mNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "608e001189e1200ba21ab8a4d510326d782554218342757ef0530a36225c7575": {
      "address": "0x1D734cD5E2Bd5bdDf9B9145dff576D847502c94C",
      "txHash": "0x8cbd04159e84f7b655b5cec17c76299b018ad32944135a5e94a13efb68013193",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "convertibleList",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_contract(IERC721)4960,t_bool)",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:14"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IM4mNFT)7234",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:16"
          },
          {
            "label": "convertRecord",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool))))",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721)4960": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7234": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(contract IERC721 => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC721)4960,t_bool)": {
            "label": "mapping(contract IERC721 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_contract(IERC721)4960,t_mapping(t_uint256,t_bool))))": {
            "label": "mapping(uint256 => mapping(address => mapping(contract IERC721 => mapping(uint256 => bool))))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "41880cf05d4aed180b8594dd6b27470ff9e801a946f5f1f0872d5db1f22f0b61": {
      "address": "0x0CE71974627B1514F68Af53e41912aE356A95B11",
      "txHash": "0x18818781c65d7e39452772baa035e3b8995a8bf2c50ddcdacfa1b4ea032a676c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:19"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IM4mComponents)7115",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:21"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IM4mComponents)7115": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fb0d7f12515a10ec5251d207b0596b08b3a9a8c4c772caa1abf9e8bf5e364ff5": {
      "address": "0xF07a60Fa7b2375c0c7aD34827ec662291Dace978",
      "txHash": "0x99e23cebbb31756d4d9b4739f87284bdddefdcc7e5dc9b5579ae89624e517f39",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:11"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:12"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IM4mNFTRegistry)7284",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IM4mNFTRegistry)7284": {
            "label": "contract IM4mNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "539b38ec9aa73acfc91e96516ac58566f2a0ad498caa0f6e510f08067aacd47b": {
      "address": "0xEC463A2424d4E6Cb9a387b261aCb06d0FF9e8b7E",
      "txHash": "0xbe7e24034dce26befdcbe053d8f6743fabfb0e60b1820f6980eca68e3c7157f9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)7672",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:19"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)7697",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)7652",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:24"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:26"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)6598_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:34"
          },
          {
            "label": "convertRecord",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_contract(IERC721)5085,t_mapping(t_uint256,t_bool))))",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)5085": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)7652": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)7672": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7697": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)7729": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_contract(IERC721)5085,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(contract IERC721 => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC721)5085,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_contract(IERC721)5085,t_mapping(t_uint256,t_bool))))": {
            "label": "mapping(uint256 => mapping(address => mapping(contract IERC721 => mapping(uint256 => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)6598_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)6598_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TokenStatus)7729",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "deec352a0f0d941fbb7aa4d19ef530dba0ca824279e3cc900c44337174b57a2a": {
      "address": "0xdf64813B1fA898BC114FBD3A081418e879E1daC3",
      "txHash": "0xe7a5f34d9458fe7f84c445a0f73e0d78764db19c000a906b42e7e4b4536629f9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:12"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:13"
          },
          {
            "label": "index",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "51430a8ef5e306b5965723bb9b89b5a3df8315785a85fc5ff2332bd6a783be27": {
      "address": "0xa7fc0E02F140Ad505E2104c0F1225B4EE124f54f",
      "txHash": "0x5cee81f314925cd5df608908a29243bbca14ed0f4e2546811cb4c143415ec890",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "convertibleList",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_contract(IERC721)5085,t_bool)",
            "contract": "M4mDao",
            "src": "contracts/M4mDao.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721)5085": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_contract(IERC721)5085,t_bool)": {
            "label": "mapping(contract IERC721 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ccc4e3402e17a68588994a94a3a736cbc2d852bad548fc7748c3b574f682b285": {
      "address": "0x4863940d6394A1eD74b20891779962e2492270B4",
      "txHash": "0x0051bf0be04cd8c7415c007ee5a0e7fdda4a131dd861779692ea58c7eb38ebff",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:11"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:12"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6747a80aa3da2c675de9b7dc2d86cfd4779d3c8150e89bdd6fa323471120719e": {
      "address": "0x5A4ce022471a29E7141611D1a6eFdf0D11e92D28",
      "txHash": "0xcf1057c2ec8468d4c4a1e7aa99eb0803f39423d7c3427dff1319f986143fe195",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)7768",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:15"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)7793",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:18"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)7748",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:20"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)6650_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)5085": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)7748": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)7768": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7793": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)7825": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)6650_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)6650_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "original",
                "type": "t_contract(IERC721)5085",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(TokenStatus)7825",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "5f890029b4c8bee5754d4572f83955c85cb84feb3799a9a4fe9b6754ef7e61d0": {
      "address": "0x6E8380649b8eDb866B7154dB68f12a0608872FC1",
      "txHash": "0xe08b3f97acbcf3be44d920710aba5e2e2d9a5d67094c64c8905dbfdd88a81595",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:12"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "19f7488b6e5414bcc8bdb33e22f0e21b5c46ab4b0e0bbc3e837f478d31679cac": {
      "address": "0x46d430959D6d83ef4414726af1B369C09c6F9A0F",
      "txHash": "0xc50376d835f23cb590893bf4bce6fa199e86f6695e431d2237bafcfffb0dcf89",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:14"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "2d31c4d176c18c4424869015b7fb4e9bfcb18a3781a80e5c2db60053037d9519": {
      "address": "0xa0a8415C3a5347b1103bb974bcA219FcdE8382ef",
      "txHash": "0xc299e43beeacb8dd1f2d547eb64ad1ac61408e2837bf96217cf15a92140eaa7f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:13"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6a73f28ad157ced5e10a194d731e8b683502e915830b57af6dcfe21e7e7b5ff3": {
      "address": "0xb105cEaCaE496E043A9Df91f055DDB43b809475c",
      "txHash": "0x165467ff434241d403d037c03ea06ccd19517890061b5e41209be16a0235f64b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)7844",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:15"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)7869",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:18"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)7824",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:20"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)6720_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)5085": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)7824": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)7844": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7869": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)7901": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)6720_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)6720_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "original",
                "type": "t_contract(IERC721)5085",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(TokenStatus)7901",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "3a2d86ab5a7e0267974ba8c4d33d14a6e53b89019c984844ff3591e4eee2df71": {
      "address": "0x4a803f141E7f6023E380C4f8eb6A7a8A92233844",
      "txHash": "0x2884441bc99b77a1130e9b2ff31bff76c71501aaa54725256d477b7fcd393c8e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:14"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "M4mNFT",
            "src": "contracts/M4mNFT.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "775ba9845df17d8754a5426c2954814c979686c98c37bc9c0a829452c6211dae": {
      "address": "0x84427c3d1b98FEC7e702e86C93fb95e47c8cF959",
      "txHash": "0x92f875323c4dc66640e7d24121d4ca52782d9f1df32678a9d4082e1165ac672f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:14"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:17"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e4b0af8971c3aae3aba0ceee9a851239805015a35ac6fdf46dff032b4c5ce442": {
      "address": "0xf20c23EB97350e92876c363F277ec4C8E815afFe",
      "txHash": "0x17191b68374a61ee0939f2cf25d5b1c0bc2445d7c28140cf68c50a85808f5a5d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:14"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:17"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "000e41e2b6614045e5dbb4e691f2b19f5a7e5e2570a94320e6c72d6b46f3adb9": {
      "address": "0x11C1dfE54F6ca1FDE2C9fc4878960baFa40c6E9e",
      "txHash": "0x51018fb3eb42203418a9c4fb54ffbc072bdcc77d5481326d562e3f384afa6d33",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:14"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:17"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:19"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9a4c192a3f44620c168b5f7e79dc195359656ce9b1ebc5b4156646402c67ab8a": {
      "address": "0x5F0c32B7af3455C80cc55681570BC01AC45b911D",
      "txHash": "0xe98e3871ef77a77fcc0a590a2c500bde865b7c8b2ffa1df5a30e30f64680f2af",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:14"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:17"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:19"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a8cceccb8b72fed1e066ce3f21b9b3057cb61a36c14c91dc2984ec788610a0c9": {
      "address": "0x84c5e9C5a4d07b4515340F46951036264135FaF1",
      "txHash": "0xd4149c918704f97d20ac7e4193a6fbd648c0e31533ce2a1299ed3357425e51ba",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)7929",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:15"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)7954",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:18"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)7909",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:20"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)6720_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:33"
          },
          {
            "label": "claimedLoot",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)5085": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)7909": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)7929": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7954": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)7986": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)6720_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)6720_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "original",
                "type": "t_contract(IERC721)5085",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(TokenStatus)7986",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7580b3fb55892d593daa72ab430bac9a7da17106675d8c466b00ac539469bc3c": {
      "address": "0x415b361eC42105Fbdb996688155DC12782082a7E",
      "txHash": "0x9d0aed2151eb923a03e92083bc4147264ee611d907d6406d345d7605a3e57344",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)7935",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:15"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)7960",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:18"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)7915",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:20"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)6720_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:33"
          },
          {
            "label": "claimedLoot",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)5085": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)7915": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)7935": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)7960": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)7992": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)6720_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)6720_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "original",
                "type": "t_contract(IERC721)5085",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(TokenStatus)7992",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9e45d4b2296324e9557d705e41aef2c9b302618a06dfbadcf830deea88e9c962": {
      "address": "0x00AE795BFcc5BdA9250AC5913F2255C647475Dd1",
      "txHash": "0xa8c11b1b4c5b1f760f163098fa8ae6aedc82aa89174c26c3aac767082547417b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)3984",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:15"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)4009",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:18"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)3964",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:20"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)2823_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:33"
          },
          {
            "label": "claimedLoot",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)2765": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)3964": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)3984": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)4009": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)4041": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)2823_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)2823_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "original",
                "type": "t_contract(IERC721)2765",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(TokenStatus)4041",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d93cafb506a4e87afbfa888ac1ed1156c9bd843e6affc14e50d5b0af3d3e94c3": {
      "address": "0xbAAf11352e10abe9C97c8EEF23b21527CdFC8f66",
      "txHash": "0x3ed40fb024fe9271eef037a200c9f396f75dccd0041dfb540632afffd146997a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "dao",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mDAO)11580",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:15"
          },
          {
            "label": "m4mNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IM4mNFT)11605",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:18"
          },
          {
            "label": "components",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IM4mComponents)11560",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:20"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:22"
          },
          {
            "label": "splitTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(SplitToken)9616_storage)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:33"
          },
          {
            "label": "claimedLoot",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mNFTRegistry",
            "src": "contracts/M4mNFTRegistry.sol:35"
          },
          {
            "label": "m4mBaggage",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "M4mNFTRegistryV2",
            "src": "contracts/M4mNFTRegistryV2.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC721)6575": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mComponents)11560": {
            "label": "contract IM4mComponents",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mDAO)11580": {
            "label": "contract IM4mDAO",
            "numberOfBytes": "20"
          },
          "t_contract(IM4mNFT)11605": {
            "label": "contract IM4mNFT",
            "numberOfBytes": "20"
          },
          "t_enum(TokenStatus)11637": {
            "label": "enum IM4mNFTRegistry.TokenStatus",
            "members": [
              "NotExist",
              "Initialized",
              "Locked",
              "Redeemed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SplitToken)9616_storage)": {
            "label": "mapping(uint256 => struct M4mNFTRegistry.SplitToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(SplitToken)9616_storage": {
            "label": "struct M4mNFTRegistry.SplitToken",
            "members": [
              {
                "label": "original",
                "type": "t_contract(IERC721)6575",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "status",
                "type": "t_enum(TokenStatus)11637",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "originalAttrHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "components",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "81eba33962c5fbafcfa9fef887d0c0c0c29aff0e04416494b109a1e12bd081f7": {
      "address": "0x9f12349bc0e750DADb128B438bf6f80991d349a7",
      "txHash": "0x86dd982e1fc6b465cf554f10188e8cdbbe5293737284b4ca794d7c864581bb2b",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mNFTRegistryV2)11770",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:17"
          },
          {
            "label": "getGameOwner",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(GameOwner)11359_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:19"
          },
          {
            "label": "lockedNFTs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedNFT)11366_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:22"
          },
          {
            "label": "_isGameSettled",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IM4mNFTRegistryV2)11770": {
            "label": "contract IM4mNFTRegistryV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GameOwner)11359_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.GameOwner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedNFT)11366_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.LockedNFT)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GameOwner)11359_storage": {
            "label": "struct IM4mBaggage.GameOwner",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "operator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedNFT)11366_storage": {
            "label": "struct IM4mBaggage.LockedNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uuid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "688d9f60fafbd681ee3c885638b17f6b636404da7cd5384a99dd5e45d3115aa7": {
      "address": "0x7F89107F038557BBD190DEFffc546d37BcA1DbfB",
      "txHash": "0x47ad871274507a3c0871a983c33a04224e1b279827063e00bbe127b180e478d3",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mNFTRegistryV2)4213",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:17"
          },
          {
            "label": "getGameOwner",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(GameOwner)3713_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:19"
          },
          {
            "label": "lockedNFTs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedNFT)3720_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:22"
          },
          {
            "label": "_isGameSettled",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:25"
          },
          {
            "label": "lockedComponents",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:16"
          },
          {
            "label": "lockedEmptyNFTs",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LockedEmptyNFT)3853_storage)",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IM4mNFTRegistryV2)4213": {
            "label": "contract IM4mNFTRegistryV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GameOwner)3713_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.GameOwner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedEmptyNFT)3853_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggageWithoutRole.LockedEmptyNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedNFT)3720_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.LockedNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GameOwner)3713_storage": {
            "label": "struct IM4mBaggage.GameOwner",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "operator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedEmptyNFT)3853_storage": {
            "label": "struct IM4mBaggageWithoutRole.LockedEmptyNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(LockedNFT)3720_storage": {
            "label": "struct IM4mBaggage.LockedNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uuid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "839270ce2f55c2d592207716011d2d88a61c4cdc792cc4c9e11fb88a1c4bafbf": {
      "address": "0x422E48cdB29F84472faa3203c23dd40c0346D04A",
      "txHash": "0x23eaf65a886739ea47a579548cb0f07124b662d84f68ab9bf8397c458ed9ebfb",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mNFTRegistryV2)4272",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:17"
          },
          {
            "label": "getGameOwner",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(GameOwner)3770_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:19"
          },
          {
            "label": "lockedNFTs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedNFT)3777_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:22"
          },
          {
            "label": "_isGameSettled",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:25"
          },
          {
            "label": "lockedComponents",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:16"
          },
          {
            "label": "lockedEmptyNFTs",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LockedEmptyNFT)3910_storage)",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IM4mNFTRegistryV2)4272": {
            "label": "contract IM4mNFTRegistryV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GameOwner)3770_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.GameOwner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedEmptyNFT)3910_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggageWithoutRole.LockedEmptyNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedNFT)3777_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.LockedNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GameOwner)3770_storage": {
            "label": "struct IM4mBaggage.GameOwner",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "operator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedEmptyNFT)3910_storage": {
            "label": "struct IM4mBaggageWithoutRole.LockedEmptyNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(LockedNFT)3777_storage": {
            "label": "struct IM4mBaggage.LockedNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uuid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1204bc2092096aa653ed8b94245dedbe08b37ab53fdf34254fa83981d64b58ed": {
      "address": "0x3E81d23bcAacDd05578d596C9f2Bf14887BE74B0",
      "txHash": "0x0260e5b166796359443bdfc46e3e2de8b5c871112d6d331e04fe5e2eeec2ecb5",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:14"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:15"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:17"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:19"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "M4mComponent",
            "src": "contracts/M4mComponent.sol:21"
          },
          {
            "label": "baggage",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "M4mComponentV2",
            "src": "contracts/M4mComponentV2.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1ba0b6d5f8c036016344449731b0e88d2855ec2886c8845a2655c59402f32d2b": {
      "address": "0x26Ef41255F22F8BBBbeC9f1525C4f83316aC8D1e",
      "txHash": "0x08edf936efb805838cfa53ae0866b8fa8907807afd654e0dac8b7bbe9a75d5de",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mNFTRegistryV2)4461",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:17"
          },
          {
            "label": "getGameOwner",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(GameOwner)3911_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:19"
          },
          {
            "label": "lockedNFTs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedNFT)3918_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:22"
          },
          {
            "label": "_isGameSettled",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:25"
          },
          {
            "label": "lockedComponents",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:17"
          },
          {
            "label": "lockedEmptyNFTs",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LockedEmptyNFT)4052_storage)",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IM4mNFTRegistryV2)4461": {
            "label": "contract IM4mNFTRegistryV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GameOwner)3911_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.GameOwner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedEmptyNFT)4052_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggageWithoutRole.LockedEmptyNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedNFT)3918_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.LockedNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GameOwner)3911_storage": {
            "label": "struct IM4mBaggage.GameOwner",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "operator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedEmptyNFT)4052_storage": {
            "label": "struct IM4mBaggageWithoutRole.LockedEmptyNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(LockedNFT)3918_storage": {
            "label": "struct IM4mBaggage.LockedNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uuid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f41cb7b720e3a7a8ed9ee18c80ef07d8d2cbb556975cca5b172c48212ad4414a": {
      "address": "0x7Fb6418E72aeA600ec6a54477F12b34789a6687E",
      "txHash": "0xaa77521b2e46ea1f186fcd00f573cc124ed4d7946f0b31b67e5225b37ab80240",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mNFTRegistryV2)12685",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:17"
          },
          {
            "label": "getGameOwner",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(GameOwner)12135_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:19"
          },
          {
            "label": "lockedNFTs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedNFT)12142_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:22"
          },
          {
            "label": "_isGameSettled",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:25"
          },
          {
            "label": "lockedComponents",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:17"
          },
          {
            "label": "lockedEmptyNFTs",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LockedEmptyNFT)12276_storage)",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IM4mNFTRegistryV2)12685": {
            "label": "contract IM4mNFTRegistryV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GameOwner)12135_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.GameOwner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedEmptyNFT)12276_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggageWithoutRole.LockedEmptyNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedNFT)12142_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.LockedNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GameOwner)12135_storage": {
            "label": "struct IM4mBaggage.GameOwner",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "operator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedEmptyNFT)12276_storage": {
            "label": "struct IM4mBaggageWithoutRole.LockedEmptyNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(LockedNFT)12142_storage": {
            "label": "struct IM4mBaggage.LockedNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uuid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "baf2223a8f1d785957403c0d825a49d7404d4c5b0f597a68102e8c7f41799cf3": {
      "address": "0x975B7FA0Ac9373ea4cA6317a1a95F34CaA086E12",
      "txHash": "0xe814b64c72fae1104eede5298ca4900d825bd764e4ac48cd02635b8d13941e5a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IM4mNFTRegistryV2)4456",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:17"
          },
          {
            "label": "getGameOwner",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(GameOwner)3906_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:19"
          },
          {
            "label": "lockedNFTs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedNFT)3913_storage)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:22"
          },
          {
            "label": "_isGameSettled",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "M4mBaggage",
            "src": "contracts/M4mBaggage.sol:25"
          },
          {
            "label": "lockedComponents",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:17"
          },
          {
            "label": "lockedEmptyNFTs",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LockedEmptyNFT)4047_storage)",
            "contract": "M4mBaggageWithoutRole",
            "src": "contracts/M4mBaggageWithoutRole.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IM4mNFTRegistryV2)4456": {
            "label": "contract IM4mNFTRegistryV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GameOwner)3906_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.GameOwner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedEmptyNFT)4047_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggageWithoutRole.LockedEmptyNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedNFT)3913_storage)": {
            "label": "mapping(uint256 => struct IM4mBaggage.LockedNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GameOwner)3906_storage": {
            "label": "struct IM4mBaggage.GameOwner",
            "members": [
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "operator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LockedEmptyNFT)4047_storage": {
            "label": "struct IM4mBaggageWithoutRole.LockedEmptyNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(LockedNFT)3913_storage": {
            "label": "struct IM4mBaggage.LockedNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "gameId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uuid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
